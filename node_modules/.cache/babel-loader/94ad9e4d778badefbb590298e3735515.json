{"ast":null,"code":"var _jsxFileName = \"/Users/dingjunning/Documents/GitHub/drag-n-drop-column/src/App.js\";\nimport React, { useState } from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { Button } from 'react-bootstrap';\nimport { BsList, BsLockFill } from 'react-icons/bs';\nconst available = [{\n  id: \"startTime\",\n  name: \"Start Time\"\n}, {\n  id: \"stopTime\",\n  name: \"Stop Time\"\n}, {\n  id: \"perPoint\",\n  name: \"Per Point\"\n}, {\n  id: \"initialMargin\",\n  name: \"Initial Margin\"\n}];\nconst visible = [{\n  id: \"change%\",\n  name: \"Change %\"\n}, {\n  id: \"change\",\n  name: \"Change\"\n}, {\n  id: \"last\",\n  name: \"Last\"\n}, {\n  id: \"lastVolume\",\n  name: \"Last Volume\"\n}];\nconst fixed = [{\n  id: \"symbol&Description\",\n  name: \"Symbol & Description\"\n}];\nconst columnsFromBackend = {\n  \"available\": {\n    name: \"Available\",\n    items: available\n  },\n  \"visible\": {\n    name: \"Visible\",\n    items: fixed.concat(visible)\n  }\n};\n\nconst checkDisable = item => {\n  for (let i = 0; i < fixed.length; i++) {\n    if (fixed[i].id == item.id) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nconst onDoubleClick = (event, fix, setFixed) => {\n  const name = event.target.innerHTML;\n  const id = name.toLowerCase();\n  const newFixed = {\n    id: id,\n    name: name\n  };\n  let index = -1;\n\n  for (let i = 0; i < fixed.length; i++) {\n    if (fixed[i].id == newFixed.id) {\n      index = i;\n      fixed.splice(index, 1);\n      console.log(index);\n      break;\n    }\n  }\n\n  if (index == -1) {\n    setFixed({ ...fix,\n      fixed: fixed.push(newFixed)\n    });\n  }\n\n  console.log(fixed);\n};\n\nconst onDragEnd = (result, columns, setColumns) => {\n  if (!result.destination) return;\n  const {\n    source,\n    destination\n  } = result;\n\n  if (source.droppableId !== destination.droppableId) {\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.items];\n    const destItems = [...destColumn.items];\n    const [removed] = sourceItems.splice(source.index, 1);\n    destItems.splice(destination.index, 0, removed);\n    setColumns({ ...columns,\n      [source.droppableId]: { ...sourceColumn,\n        items: sourceItems\n      },\n      [destination.droppableId]: { ...destColumn,\n        items: destItems\n      }\n    });\n  } else {\n    const column = columns[source.droppableId];\n    const copiedItems = [...column.items];\n    const [removed] = copiedItems.splice(source.index, 1);\n    copiedItems.splice(destination.index, 0, removed);\n    setColumns({ ...columns,\n      [source.droppableId]: { ...column,\n        items: copiedItems\n      }\n    });\n  }\n};\n\nfunction App() {\n  const [columns, setColumns] = useState(columnsFromBackend);\n  const [fix, setFixed] = useState(fixed);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      background: \"#000000\",\n      display: \"flex\",\n      height: \"100%\",\n      color: \"#ffffff\",\n      paddingTop: \"20px\",\n      paddingLeft: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, \"Configure Data Fields\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      background: \"#000000\",\n      display: \"flex\",\n      height: \"100%\",\n      color: \"#9da4ab\",\n      paddingLeft: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, \"Drag & Drop between columns to configure visible data.\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      background: \"#000000\",\n      display: \"flex\",\n      height: \"100%\",\n      padding: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DragDropContext, {\n    style: {\n      color: \"white\"\n    },\n    onDragEnd: result => this.onDragEnd(result),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, Object.entries(this.state.columns).map(([columnId, column]) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      key: columnId,\n      onDoubleClick: event => this.onDoubleClick(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: '#9da4ab',\n        paddingLeft: \"15px\",\n        marginTop: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 19\n      }\n    }, column.name), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Droppable, {\n      droppableId: columnId,\n      key: columnId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }, provided => {\n      return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, provided.droppableProps, {\n        ref: provided.innerRef,\n        style: {\n          background: \"#000000\",\n          padding: 3,\n          width: 300,\n          borderStyle: column.name === \"Available\" ? \"none none none none\" : \"none none none dashed\",\n          borderWidth: \"3px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 27\n        }\n      }), column.items.map((item, index) => {\n        return /*#__PURE__*/React.createElement(Draggable, {\n          key: item.id,\n          draggableId: item.id,\n          index: index,\n          isDragDisabled: checkDisable(item),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 33\n          }\n        }, (provided, snapshot) => {\n          return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n            ref: provided.innerRef\n          }, provided.draggableProps, provided.dragHandleProps, {\n            style: {\n              userSelect: \"none\",\n              padding: 5,\n              margin: \"0 0 5px 5px\",\n              minHeight: \"20px\",\n              backgroundColor: snapshot.isDragging ? \"#252930\" : \"#000000\",\n              color: checkDisable(item) ? \"#9da4ab\" : \"#ffffff\",\n              ...provided.draggableProps.style\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 39\n            }\n          }), /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 41\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            style: {\n              padding: \"10px\",\n              float: \"left\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 43\n            }\n          }, /*#__PURE__*/React.createElement(BsLockFill, {\n            style: {\n              display: checkDisable(item) ? \"block\" : \"none\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 45\n            }\n          }), /*#__PURE__*/React.createElement(BsList, {\n            style: {\n              display: checkDisable(item) ? \"none\" : \"block\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 45\n            }\n          })), /*#__PURE__*/React.createElement(\"div\", {\n            style: {\n              padding: \"7px\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 43\n            }\n          }, item.name)));\n        });\n      }), provided.placeholder);\n    })));\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      background: \"#000000\",\n      height: \"1000px\",\n      padding: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      margin: \"10px\",\n      width: \"90px\"\n    },\n    variant: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 11\n    }\n  }, \"Save\"), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      margin: \"10px\",\n      width: \"90px\"\n    },\n    variant: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }\n  }, \"Cancel\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dingjunning/Documents/GitHub/drag-n-drop-column/src/App.js"],"names":["React","useState","DragDropContext","Draggable","Droppable","Button","BsList","BsLockFill","available","id","name","visible","fixed","columnsFromBackend","items","concat","checkDisable","item","i","length","onDoubleClick","event","fix","setFixed","target","innerHTML","toLowerCase","newFixed","index","splice","console","log","push","onDragEnd","result","columns","setColumns","destination","source","droppableId","sourceColumn","destColumn","sourceItems","destItems","removed","column","copiedItems","App","background","display","height","color","paddingTop","paddingLeft","padding","Object","entries","state","map","columnId","flexDirection","marginTop","provided","droppableProps","innerRef","width","borderStyle","borderWidth","snapshot","draggableProps","dragHandleProps","userSelect","margin","minHeight","backgroundColor","isDragging","style","float","placeholder"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { Button } from 'react-bootstrap';\nimport { BsList,BsLockFill } from 'react-icons/bs';\n\nconst available = [\n  { id: \"startTime\", name: \"Start Time\" },\n  { id: \"stopTime\", name: \"Stop Time\" },\n  { id: \"perPoint\", name: \"Per Point\" },\n  { id: \"initialMargin\" , name: \"Initial Margin\" },\n];\n\nconst visible = [\n  { id: \"change%\", name: \"Change %\"},\n  { id: \"change\", name: \"Change\"},\n  { id: \"last\", name: \"Last\" },\n  { id: \"lastVolume\", name: \"Last Volume\" },\n];\n\nconst fixed = [\n  { id: \"symbol&Description\", name: \"Symbol & Description\"},\n];\n\nconst columnsFromBackend = {\n  \"available\": {\n    name: \"Available\",\n    items: available\n  },\n  \"visible\": {\n    name: \"Visible\",\n    items: fixed.concat(visible)\n  },\n};\n\nconst checkDisable=(item)=>{\n  for(let i=0;i<fixed.length;i++){\n    if(fixed[i].id==item.id){\n      return true;\n    }\n  }\n  return false;\n}\n\nconst onDoubleClick=(event,fix,setFixed)=>{\n  const name = event.target.innerHTML;\n  const id = name.toLowerCase();\n  const newFixed = {id:id,name:name};\n  let index = -1;\n  for(let i=0;i<fixed.length;i++){\n    if(fixed[i].id==newFixed.id){\n      index =i;\n      fixed.splice(index,1);\n      console.log(index);\n      break;\n    }\n  }\n  if(index==-1){\n    setFixed({\n      ...fix,\n      fixed: fixed.push(newFixed)\n    });\n  }  \n  console.log(fixed);\n}\n\nconst onDragEnd = (result, columns, setColumns) => {\n  if (!result.destination) return;\n  const { source, destination } = result;\n\n  if (source.droppableId !== destination.droppableId) {\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.items];\n    const destItems = [...destColumn.items];\n    const [removed] = sourceItems.splice(source.index, 1);\n    destItems.splice(destination.index, 0, removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]: {\n        ...sourceColumn,\n        items: sourceItems\n      },\n      [destination.droppableId]: {\n        ...destColumn,\n        items: destItems\n      }\n    });\n  } else {\n    const column = columns[source.droppableId];\n    const copiedItems = [...column.items];\n    const [removed] = copiedItems.splice(source.index, 1);\n    copiedItems.splice(destination.index, 0, removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]: {\n        ...column,\n        items: copiedItems\n      }\n    });\n  }\n};\n\nfunction App() {\n  const [columns, setColumns] = useState(columnsFromBackend);\n  const [fix,setFixed] = useState(fixed);\n  return (\n    <div>\n        <div style={{ background:\"#000000\", display:\"flex\", height: \"100%\", color:\"#ffffff\", paddingTop:\"20px\", paddingLeft:\"20px\"}}>\n          <h5>Configure Data Fields</h5>\n        </div>\n        <div style={{ background:\"#000000\", display:\"flex\", height: \"100%\", color:\"#9da4ab\",paddingLeft:\"20px\"}}>\n          <span>Drag & Drop between columns to configure visible data.</span>\n        </div>\n        <div style={{ background:\"#000000\",display: \"flex\", height: \"100%\", padding:\"20px\" }}>\n          <DragDropContext style={{color:\"white\"}} onDragEnd={result => this.onDragEnd(result)}>\n            {Object.entries(this.state.columns).map(([columnId, column]) => {\n              return (   \n                <div\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    \n                  }}\n                  key={columnId}\n                  onDoubleClick={event=>this.onDoubleClick(event)}\n                >\n                  <p style={{color:'#9da4ab',paddingLeft:\"15px\",marginTop:\"20px\"}}>{column.name}</p>\n                  <div>\n                    <Droppable droppableId={columnId} key={columnId} >\n                      {(provided) => {\n                        return (\n                          <div\n                            {...provided.droppableProps}\n                            ref={provided.innerRef}\n                            style={{\n                              background: \"#000000\",\n                              padding: 3,\n                              width: 300,\n                              borderStyle: column.name===\"Available\"\n                                ? \"none none none none\"\n                                : \"none none none dashed\",\n                              borderWidth:\"3px\",\n                            }}\n                          >\n                            {column.items.map((item, index) => {\n                              return (\n                                <Draggable\n                                  key={item.id}\n                                  draggableId={item.id}\n                                  index={index}\n                                  isDragDisabled={checkDisable(item)}\n                                >\n                                  {(provided, snapshot) => {\n                                    return (\n                                      <div\n                                        ref={provided.innerRef}\n                                        {...provided.draggableProps}\n                                        {...provided.dragHandleProps}\n                                        style={{\n                                          userSelect: \"none\",\n                                          padding: 5,\n                                          margin: \"0 0 5px 5px\",\n                                          minHeight: \"20px\",\n                                          backgroundColor: snapshot.isDragging\n                                            ? \"#252930\"\n                                            : \"#000000\",\n                                          color: checkDisable(item)\n                                            ? \"#9da4ab\"\n                                            : \"#ffffff\",\n                                          ...provided.draggableProps.style\n                                        }}\n                                      >\n                                        <div>\n                                          <div style={{padding:\"10px\",float:\"left\"}}>\n                                            <BsLockFill style={{\n                                              display: checkDisable(item)\n                                              ? \"block\"\n                                              : \"none\",\n                                              }}\n                                            />\n                                            <BsList style={{\n                                              display: checkDisable(item)\n                                              ? \"none\"\n                                              : \"block\",\n                                              }}\n                                            />\n                                          </div>\n                                          <div style={{padding:\"7px\"}}>\n                                            {item.name}\n                                          </div>\n                                        </div>\n                                      </div>\n                                    );\n                                  }}\n                                </Draggable>\n                              );\n                            })}\n                            {provided.placeholder}\n                          </div>\n                        );\n                      }}\n                    </Droppable>\n                  </div>\n                </div>\n              );\n            })}\n          </DragDropContext>\n        </div>\n        <div style={{background:\"#000000\" , height:\"1000px\", padding:\"20px\"}}>\n          <Button style={{margin:\"10px\", width:\"90px\"}} variant=\"info\">Save</Button>\n          <Button style={{margin:\"10px\", width:\"90px\"}} variant=\"secondary\">Cancel</Button>\n        </div>\n      </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}