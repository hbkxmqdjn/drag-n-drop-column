{"ast":null,"code":"var _jsxFileName = \"/Users/dingjunning/Documents/GitHub/drag-n-drop-column/src/App.js\";\nimport React, { useState } from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { Button } from 'react-bootstrap';\nimport { BsList, BsLockFill } from 'react-icons/bs';\nconst available = [{\n  id: \"startTime\",\n  name: \"Start Time\"\n}, {\n  id: \"stopTime\",\n  name: \"Stop Time\"\n}, {\n  id: \"perPoint\",\n  name: \"Per Point\"\n}, {\n  id: \"initialMargin\",\n  name: \"Initial Margin\"\n}];\nconst visible = [{\n  id: \"change%\",\n  name: \"Change %\"\n}, {\n  id: \"change\",\n  name: \"Change\"\n}, {\n  id: \"last\",\n  name: \"Last\"\n}, {\n  id: \"lastVolume\",\n  name: \"Last Volume\"\n}];\nconst fixed = [{\n  id: \"symbol&Description\",\n  name: \"Symbol & Description\"\n}];\nconst columnsFromBackend = {\n  \"available\": {\n    name: \"Available\",\n    items: available\n  },\n  \"visible\": {\n    name: \"Visible\",\n    items: fixed.concat(visible)\n  }\n};\n\nconst checkDisable = item => {\n  for (let i = 0; i < fixed.length; i++) {\n    if (fixed[i].id == item.id) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nconst onDoubleClick = (event, fix, setFixed) => {\n  console.log(fix);\n  const name = event.target.innerHTML;\n  const id = name.toLowerCase();\n  const newFixed = [{\n    id: id,\n    name: name\n  }];\n  let index = -1;\n\n  for (let i = 0; i < fix.length; i++) {\n    if (fix[i].id === newFixed.id) {\n      index = i;\n      const copied = [...fix];\n      const newFix = copied.splice(index, 1);\n      setFixed({ ...fix,\n        fix: newFix\n      });\n      break;\n    }\n  }\n\n  if (index === -1) {\n    const copied = [...fix];\n    const newFix = copied.push(newFixed);\n    setFixed({ ...fix.push(newFixed)\n    });\n  }\n};\n\nconst onDragEnd = (result, columns, setColumns) => {\n  if (!result.destination) return;\n  const {\n    source,\n    destination\n  } = result;\n\n  if (source.droppableId !== destination.droppableId) {\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.items];\n    const destItems = [...destColumn.items];\n    const [removed] = sourceItems.splice(source.index, 1);\n    destItems.splice(destination.index, 0, removed);\n    setColumns({ ...columns,\n      [source.droppableId]: { ...sourceColumn,\n        items: sourceItems\n      },\n      [destination.droppableId]: { ...destColumn,\n        items: destItems\n      }\n    });\n  } else {\n    const column = columns[source.droppableId];\n    const copiedItems = [...column.items];\n    const [removed] = copiedItems.splice(source.index, 1);\n    copiedItems.splice(destination.index, 0, removed);\n    setColumns({ ...columns,\n      [source.droppableId]: { ...column,\n        items: copiedItems\n      }\n    });\n  }\n};\n\nfunction App() {\n  const [columns, setColumns] = useState(columnsFromBackend);\n  const [fix, setFixed] = useState(fixed);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      background: \"#000000\",\n      display: \"flex\",\n      height: \"100%\",\n      color: \"#ffffff\",\n      paddingTop: \"20px\",\n      paddingLeft: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, \"Configure Data Fields\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      background: \"#000000\",\n      display: \"flex\",\n      height: \"100%\",\n      color: \"#9da4ab\",\n      paddingLeft: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, \"Drag & Drop between columns to configure visible data.\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      background: \"#000000\",\n      display: \"flex\",\n      height: \"100%\",\n      padding: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DragDropContext, {\n    style: {\n      color: \"white\"\n    },\n    onDragEnd: result => onDragEnd(result, columns, setColumns),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, Object.entries(columns).map(([columnId, column], index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      key: columnId,\n      onDoubleClick: event => onDoubleClick(event, fix, setFixed),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: '#9da4ab',\n        paddingLeft: \"15px\",\n        marginTop: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, column.name), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Droppable, {\n      droppableId: columnId,\n      key: columnId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 19\n      }\n    }, provided => {\n      return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, provided.droppableProps, {\n        ref: provided.innerRef,\n        style: {\n          background: \"#000000\",\n          padding: 3,\n          width: 300,\n          borderStyle: \"none none none dashed\",\n          borderWidth: \"3px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }\n      }), column.items.map((item, index) => {\n        return /*#__PURE__*/React.createElement(Draggable, {\n          key: item.id,\n          draggableId: item.id,\n          index: index,\n          isDragDisabled: checkDisable(item),\n          style: {\n            color: checkDisable(item) ? \"#252930\" : \"#9da4ab\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 31\n          }\n        }, (provided, snapshot) => {\n          return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n            ref: provided.innerRef\n          }, provided.draggableProps, provided.dragHandleProps, {\n            style: {\n              userSelect: \"none\",\n              padding: 5,\n              margin: \"0 0 5px 5px\",\n              minHeight: \"20px\",\n              backgroundColor: snapshot.isDragging ? \"#252930\" : \"#000000\",\n              color: \"white\",\n              ...provided.draggableProps.style\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 37\n            }\n          }), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"iconWrapper\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 39\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            style: {\n              padding: \"10px\",\n              float: \"left\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 41\n            }\n          }, /*#__PURE__*/React.createElement(BsList, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 43\n            }\n          })), /*#__PURE__*/React.createElement(\"div\", {\n            style: {\n              padding: \"12px\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 41\n            }\n          }, item.name)));\n        });\n      }), provided.placeholder);\n    })));\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      background: \"#000000\",\n      height: \"1000px\",\n      padding: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      margin: \"10px\",\n      width: \"90px\"\n    },\n    variant: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  }, \"Save\"), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      margin: \"10px\",\n      width: \"90px\"\n    },\n    variant: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }\n  }, \"Cancel\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dingjunning/Documents/GitHub/drag-n-drop-column/src/App.js"],"names":["React","useState","DragDropContext","Draggable","Droppable","Button","BsList","BsLockFill","available","id","name","visible","fixed","columnsFromBackend","items","concat","checkDisable","item","i","length","onDoubleClick","event","fix","setFixed","console","log","target","innerHTML","toLowerCase","newFixed","index","copied","newFix","splice","push","onDragEnd","result","columns","setColumns","destination","source","droppableId","sourceColumn","destColumn","sourceItems","destItems","removed","column","copiedItems","App","background","display","height","color","paddingTop","paddingLeft","padding","Object","entries","map","columnId","flexDirection","marginTop","provided","droppableProps","innerRef","width","borderStyle","borderWidth","snapshot","draggableProps","dragHandleProps","userSelect","margin","minHeight","backgroundColor","isDragging","style","float","placeholder"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { Button } from 'react-bootstrap';\nimport { BsList,BsLockFill } from 'react-icons/bs';\n\nconst available = [\n  { id: \"startTime\", name: \"Start Time\" },\n  { id: \"stopTime\", name: \"Stop Time\" },\n  { id: \"perPoint\", name: \"Per Point\" },\n  { id: \"initialMargin\" , name: \"Initial Margin\" },\n];\n\nconst visible = [\n  { id: \"change%\", name: \"Change %\"},\n  { id: \"change\", name: \"Change\"},\n  { id: \"last\", name: \"Last\" },\n  { id: \"lastVolume\", name: \"Last Volume\" },\n];\n\nconst fixed = [\n  { id: \"symbol&Description\", name: \"Symbol & Description\"},\n];\n\nconst columnsFromBackend = {\n  \"available\": {\n    name: \"Available\",\n    items: available\n  },\n  \"visible\": {\n    name: \"Visible\",\n    items: fixed.concat(visible)\n  },\n};\n\nconst checkDisable=(item)=>{\n  for(let i=0;i<fixed.length;i++){\n    if(fixed[i].id==item.id){\n      return true;\n    }\n  }\n  return false;\n}\n\nconst onDoubleClick=(event,fix,setFixed)=>{\n  console.log(fix);\n  const name = event.target.innerHTML;\n  const id = name.toLowerCase();\n  const newFixed = [{id:id,name:name}];\n  let index = -1;\n  for(let i=0;i<fix.length;i++){\n    if(fix[i].id===newFixed.id){\n      index = i;\n      const copied = [...fix];\n      const newFix = copied.splice(index,1);\n      setFixed({\n        ...fix,\n        fix: newFix,\n      })\n      break;\n    }\n  }\n  if(index===-1){\n    const copied = [...fix];\n    const newFix = copied.push(newFixed);\n    setFixed({\n      ...fix.push(newFixed),\n    });\n  }  \n}\n\nconst onDragEnd = (result, columns, setColumns) => {\n  if (!result.destination) return;\n  const { source, destination } = result;\n\n  if (source.droppableId !== destination.droppableId) {\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.items];\n    const destItems = [...destColumn.items];\n    const [removed] = sourceItems.splice(source.index, 1);\n    destItems.splice(destination.index, 0, removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]: {\n        ...sourceColumn,\n        items: sourceItems\n      },\n      [destination.droppableId]: {\n        ...destColumn,\n        items: destItems\n      }\n    });\n  } else {\n    const column = columns[source.droppableId];\n    const copiedItems = [...column.items];\n    const [removed] = copiedItems.splice(source.index, 1);\n    copiedItems.splice(destination.index, 0, removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]: {\n        ...column,\n        items: copiedItems\n      }\n    });\n  }\n};\n\nfunction App() {\n  const [columns, setColumns] = useState(columnsFromBackend);\n  const [fix,setFixed] = useState(fixed);\n  return (\n    <div>\n      <div style={{ background:\"#000000\", display:\"flex\", height: \"100%\", color:\"#ffffff\", paddingTop:\"20px\", paddingLeft:\"20px\"}}>\n        <h5>Configure Data Fields</h5>\n      </div>\n      <div style={{ background:\"#000000\", display:\"flex\", height: \"100%\", color:\"#9da4ab\",paddingLeft:\"20px\"}}>\n        <span>Drag & Drop between columns to configure visible data.</span>\n      </div>\n      <div style={{ background:\"#000000\",display: \"flex\", height: \"100%\", padding:\"20px\" }}>\n        <DragDropContext style={{color:\"white\"}} onDragEnd={result => onDragEnd(result, columns, setColumns)}>\n          {Object.entries(columns).map(([columnId, column], index) => {\n            return (   \n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                }}\n                key={columnId}\n                onDoubleClick={event=>onDoubleClick(event,fix,setFixed)}\n              >\n                <p style={{color:'#9da4ab',paddingLeft:\"15px\",marginTop:\"20px\"}}>{column.name}</p>\n                <div>\n                  <Droppable droppableId={columnId} key={columnId} >\n                    {(provided) => {\n                      return (\n                        <div\n                          {...provided.droppableProps}\n                          ref={provided.innerRef}\n                          style={{\n                            background: \"#000000\",\n                            padding: 3,\n                            width: 300,\n                            borderStyle:\"none none none dashed\",\n                            borderWidth:\"3px\",\n                          }}\n                        >\n                          {column.items.map((item, index) => {\n                            return (\n                              <Draggable\n                                key={item.id}\n                                draggableId={item.id}\n                                index={index}\n                                isDragDisabled={checkDisable(item)}\n                                style={{\n                                  color: checkDisable(item)\n                                  ? \"#252930\"\n                                  : \"#9da4ab\",}}\n                              >\n                                {(provided, snapshot) => {\n                                  return (\n                                    <div\n                                      ref={provided.innerRef}\n                                      {...provided.draggableProps}\n                                      {...provided.dragHandleProps}\n                                      style={{\n                                        userSelect: \"none\",\n                                        padding: 5,\n                                        margin: \"0 0 5px 5px\",\n                                        minHeight: \"20px\",\n                                        backgroundColor: snapshot.isDragging\n                                          ? \"#252930\"\n                                          : \"#000000\",\n                                        color: \"white\",\n                                        ...provided.draggableProps.style\n                                      }}\n                                    >\n                                      <div className={\"iconWrapper\"}>\n                                        <div style={{padding:\"10px\",float:\"left\"}}>\n                                          <BsList/>\n                                        </div>\n                                        <div style={{padding:\"12px\"}}>\n                                          {item.name}\n                                        </div>\n                                      </div>\n                                    </div>\n                                  );\n                                }}\n                              </Draggable>\n                            );\n                          })}\n                          {provided.placeholder}\n                        </div>\n                      );\n                    }}\n                  </Droppable>\n                </div>\n              </div>\n            );\n          })}\n        </DragDropContext>\n      </div>\n      <div style={{background:\"#000000\" , height:\"1000px\", padding:\"20px\"}}>\n        <Button style={{margin:\"10px\", width:\"90px\"}} variant=\"info\">Save</Button>\n        <Button style={{margin:\"10px\", width:\"90px\"}} variant=\"secondary\">Cancel</Button>\n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}