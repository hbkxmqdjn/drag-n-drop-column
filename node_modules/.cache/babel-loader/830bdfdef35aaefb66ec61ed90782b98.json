{"ast":null,"code":"var _jsxFileName = \"/Users/dingjunning/Documents/GitHub/drag-n-drop-column/src/App.js\";\nimport React from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nconst itemsFromBackend = [{\n  id: 'startTime',\n  content: \"First task\"\n}, {\n  id: uuid(),\n  content: \"Second task\"\n}, {\n  id: uuid(),\n  content: \"Third task\"\n}, {\n  id: uuid(),\n  content: \"Fourth task\"\n}, {\n  id: uuid(),\n  content: \"Fifth task\"\n}];\nconst columnsFromBackend = {\n  [uuid()]: {\n    name: \"Requested\",\n    items: itemsFromBackend\n  },\n  [uuid()]: {\n    name: \"To do\",\n    items: []\n  },\n  [uuid()]: {\n    name: \"In Progress\",\n    items: []\n  },\n  [uuid()]: {\n    name: \"Done\",\n    items: []\n  }\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onDragEnd = (result, columns, setColumns) => {\n      if (!result.destination) return;\n      const {\n        source,\n        destination\n      } = result;\n\n      if (source.droppableId !== destination.droppableId) {\n        const sourceColumn = columns[source.droppableId];\n        const destColumn = columns[destination.droppableId];\n        const sourceItems = [...sourceColumn.items];\n        const destItems = [...destColumn.items];\n        const [removed] = sourceItems.splice(source.index, 1);\n        destItems.splice(destination.index, 0, removed);\n        setColumns({ ...columns,\n          [source.droppableId]: { ...sourceColumn,\n            items: sourceItems\n          },\n          [destination.droppableId]: { ...destColumn,\n            items: destItems\n          }\n        });\n      } else {\n        const column = columns[source.droppableId];\n        const copiedItems = [...column.items];\n        const [removed] = copiedItems.splice(source.index, 1);\n        copiedItems.splice(destination.index, 0, removed);\n        setColumns({ ...columns,\n          [source.droppableId]: { ...column,\n            items: copiedItems\n          }\n        });\n      }\n    };\n\n    this.state = {\n      availble: [{\n        id: 'startTime',\n        name: 'Start Time'\n      }],\n      visible: ['change']\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(DragDropContext, {\n      onDragEnd: result => this.onDragEnd(result, columns, setColumns),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, Object.entries(columns).map(([columnId, column], index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\"\n        },\n        key: columnId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }\n      }, column.name), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          margin: 8\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Droppable, {\n        droppableId: columnId,\n        key: columnId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 19\n        }\n      }, (provided, snapshot) => {\n        return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, provided.droppableProps, {\n          ref: provided.innerRef,\n          style: {\n            background: snapshot.isDraggingOver ? \"lightblue\" : \"lightgrey\",\n            padding: 4,\n            width: 250,\n            minHeight: 500\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }\n        }), column.items.map((item, index) => {\n          return /*#__PURE__*/React.createElement(Draggable, {\n            key: item.id,\n            draggableId: item.id,\n            index: index,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 31\n            }\n          }, (provided, snapshot) => {\n            return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n              ref: provided.innerRef\n            }, provided.draggableProps, provided.dragHandleProps, {\n              style: {\n                userSelect: \"none\",\n                padding: 16,\n                margin: \"0 0 8px 0\",\n                minHeight: \"50px\",\n                backgroundColor: snapshot.isDragging ? \"#263B4A\" : \"#456C86\",\n                color: \"white\",\n                ...provided.draggableProps.style\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 37\n              }\n            }), item.content);\n          });\n        }), provided.placeholder);\n      })));\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dingjunning/Documents/GitHub/drag-n-drop-column/src/App.js"],"names":["React","DragDropContext","Draggable","Droppable","itemsFromBackend","id","content","uuid","columnsFromBackend","name","items","App","Component","constructor","props","onDragEnd","result","columns","setColumns","destination","source","droppableId","sourceColumn","destColumn","sourceItems","destItems","removed","splice","index","column","copiedItems","state","availble","visible","render","display","justifyContent","height","Object","entries","map","columnId","flexDirection","alignItems","margin","provided","snapshot","droppableProps","innerRef","background","isDraggingOver","padding","width","minHeight","item","draggableProps","dragHandleProps","userSelect","backgroundColor","isDragging","color","style","placeholder"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\n\nconst itemsFromBackend = [\n  { id: 'startTime', content: \"First task\" },\n  { id: uuid(), content: \"Second task\" },\n  { id: uuid(), content: \"Third task\" },\n  { id: uuid(), content: \"Fourth task\" },\n  { id: uuid(), content: \"Fifth task\" }\n];\n\nconst columnsFromBackend = {\n  [uuid()]: {\n    name: \"Requested\",\n    items: itemsFromBackend\n  },\n  [uuid()]: {\n    name: \"To do\",\n    items: []\n  },\n  [uuid()]: {\n    name: \"In Progress\",\n    items: []\n  },\n  [uuid()]: {\n    name: \"Done\",\n    items: []\n  }\n};\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n      availble:[{id:'startTime',name:'Start Time'}],\n      visible:['change'],\n    }\n  }\n  onDragEnd = (result, columns, setColumns) => {\n    if (!result.destination) return;\n    const { source, destination } = result;\n  \n    if (source.droppableId !== destination.droppableId) {\n      const sourceColumn = columns[source.droppableId];\n      const destColumn = columns[destination.droppableId];\n      const sourceItems = [...sourceColumn.items];\n      const destItems = [...destColumn.items];\n      const [removed] = sourceItems.splice(source.index, 1);\n      destItems.splice(destination.index, 0, removed);\n      setColumns({\n        ...columns,\n        [source.droppableId]: {\n          ...sourceColumn,\n          items: sourceItems\n        },\n        [destination.droppableId]: {\n          ...destColumn,\n          items: destItems\n        }\n      });\n    } else {\n      const column = columns[source.droppableId];\n      const copiedItems = [...column.items];\n      const [removed] = copiedItems.splice(source.index, 1);\n      copiedItems.splice(destination.index, 0, removed);\n      setColumns({\n        ...columns,\n        [source.droppableId]: {\n          ...column,\n          items: copiedItems\n        }\n      });\n    }\n  };\n  render(){\n    return (\n      <div style={{ display: \"flex\", justifyContent: \"center\", height: \"100%\" }}>\n        <DragDropContext\n          onDragEnd={result => this.onDragEnd(result, columns, setColumns)}\n        >\n          {Object.entries(columns).map(([columnId, column], index) => {\n            return (\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  alignItems: \"center\"\n                }}\n                key={columnId}\n              >\n                <h2>{column.name}</h2>\n                <div style={{ margin: 8 }}>\n                  <Droppable droppableId={columnId} key={columnId}>\n                    {(provided, snapshot) => {\n                      return (\n                        <div\n                          {...provided.droppableProps}\n                          ref={provided.innerRef}\n                          style={{\n                            background: snapshot.isDraggingOver\n                              ? \"lightblue\"\n                              : \"lightgrey\",\n                            padding: 4,\n                            width: 250,\n                            minHeight: 500\n                          }}\n                        >\n                          {column.items.map((item, index) => {\n                            return (\n                              <Draggable\n                                key={item.id}\n                                draggableId={item.id}\n                                index={index}\n                              >\n                                {(provided, snapshot) => {\n                                  return (\n                                    <div\n                                      ref={provided.innerRef}\n                                      {...provided.draggableProps}\n                                      {...provided.dragHandleProps}\n                                      style={{\n                                        userSelect: \"none\",\n                                        padding: 16,\n                                        margin: \"0 0 8px 0\",\n                                        minHeight: \"50px\",\n                                        backgroundColor: snapshot.isDragging\n                                          ? \"#263B4A\"\n                                          : \"#456C86\",\n                                        color: \"white\",\n                                        ...provided.draggableProps.style\n                                      }}\n                                    >\n                                      {item.content}\n                                    </div>\n                                  );\n                                }}\n                              </Draggable>\n                            );\n                          })}\n                          {provided.placeholder}\n                        </div>\n                      );\n                    }}\n                  </Droppable>\n                </div>\n              </div>\n            );\n          })}\n        </DragDropContext>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}