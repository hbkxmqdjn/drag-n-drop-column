{"ast":null,"code":"var _jsxFileName = \"/Users/dingjunning/Documents/GitHub/drag-n-drop-column/src/App.js\";\nimport React, { useState } from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nconst available = [{\n  id: \"startTime\",\n  name: \"Start Time\"\n}, {\n  id: \"stopTime\",\n  name: \"Stop Time\"\n}, {\n  id: \"perPoint\",\n  name: \"Per Point\"\n}, {\n  id: \"initialMargin\",\n  name: \"Initial Margin\"\n}];\nconst visible = [{\n  id: \"change%\",\n  name: \"Change %\"\n}, {\n  id: \"change\",\n  name: \"Change\"\n}, {\n  id: \"last\",\n  content: \"Last\"\n}, {\n  id: \"lastVolume\",\n  content: \"Last Volume\"\n}];\nconst fixed = [{\n  id: \"symbol&Description\",\n  content: \"Symbol & Description\"\n}];\nconst columnsFromBackend = {\n  \"available\": {\n    name: \"Available\",\n    items: available\n  },\n  \"visible\": {\n    name: \"Visible\",\n    items: fixed.concat(visible)\n  }\n};\n\nconst onDoubleClick = result => {};\n\nconst onDragEnd = (result, columns, setColumns) => {\n  if (!result.destination) return;\n  const {\n    source,\n    destination\n  } = result;\n\n  if (source.droppableId !== destination.droppableId) {\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.items];\n    const destItems = [...destColumn.items];\n    const [removed] = sourceItems.splice(source.index, 1);\n    destItems.splice(destination.index, 0, removed);\n    setColumns({ ...columns,\n      [source.droppableId]: { ...sourceColumn,\n        items: sourceItems\n      },\n      [destination.droppableId]: { ...destColumn,\n        items: destItems\n      }\n    });\n  } else {\n    const column = columns[source.droppableId];\n    const copiedItems = [...column.items];\n    const [removed] = copiedItems.splice(source.index, 1);\n    copiedItems.splice(destination.index, 0, removed);\n    setColumns({ ...columns,\n      [source.droppableId]: { ...column,\n        items: copiedItems\n      }\n    });\n  }\n};\n\nfunction App() {\n  const [columns, setColumns] = useState(columnsFromBackend);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      background: \"#0f1117\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      height: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DragDropContext, {\n    onDragEnd: result => onDragEnd(result, columns, setColumns),\n    onDoubleClick: result => onDoubleClick(result),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, Object.entries(columns).map(([columnId, column], index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      key: columnId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      style: {\n        color: '#393e45'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, column.name), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Droppable, {\n      droppableId: columnId,\n      key: columnId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, provided => {\n      return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, provided.droppableProps, {\n        ref: provided.innerRef,\n        style: {\n          background: \"#0f1117\",\n          padding: 4,\n          width: 250,\n          minHeight: 1000\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 23\n        }\n      }), column.items.map((item, index) => {\n        return /*#__PURE__*/React.createElement(Draggable, {\n          key: item.id,\n          draggableId: item.id,\n          index: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }\n        }, (provided, snapshot) => {\n          return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n            ref: provided.innerRef\n          }, provided.draggableProps, provided.dragHandleProps, {\n            style: {\n              userSelect: \"none\",\n              padding: 16,\n              margin: \"0 0 8px 0\",\n              minHeight: \"50px\",\n              backgroundColor: snapshot.isDragging ? \"#252930\" : \"#0f1117\",\n              color: \"white\",\n              ...provided.draggableProps.style\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 35\n            }\n          }), item.name);\n        });\n      }), provided.placeholder);\n    })));\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dingjunning/Documents/GitHub/drag-n-drop-column/src/App.js"],"names":["React","useState","DragDropContext","Draggable","Droppable","available","id","name","visible","content","fixed","columnsFromBackend","items","concat","onDoubleClick","result","onDragEnd","columns","setColumns","destination","source","droppableId","sourceColumn","destColumn","sourceItems","destItems","removed","splice","index","column","copiedItems","App","background","display","justifyContent","height","Object","entries","map","columnId","flexDirection","alignItems","color","margin","provided","droppableProps","innerRef","padding","width","minHeight","item","snapshot","draggableProps","dragHandleProps","userSelect","backgroundColor","isDragging","style","placeholder"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\n\nconst available = [\n  { id: \"startTime\", name: \"Start Time\" },\n  { id: \"stopTime\", name: \"Stop Time\" },\n  { id: \"perPoint\", name: \"Per Point\" },\n  { id: \"initialMargin\" , name: \"Initial Margin\" },\n];\n\nconst visible = [\n  { id: \"change%\", name: \"Change %\" },\n  { id: \"change\", name: \"Change\" },\n  { id: \"last\", content: \"Last\" },\n  { id: \"lastVolume\", content: \"Last Volume\" },\n];\n\nconst fixed = [\n  { id: \"symbol&Description\", content: \"Symbol & Description\" },\n];\n\nconst columnsFromBackend = {\n  \"available\": {\n    name: \"Available\",\n    items: available\n  },\n  \"visible\": {\n    name: \"Visible\",\n    items: fixed.concat(visible)\n  },\n};\n\nconst onDoubleClick=(result)=>{\n\n}\n\n\nconst onDragEnd = (result, columns, setColumns) => {\n  if (!result.destination) return;\n  const { source, destination } = result;\n\n  if (source.droppableId !== destination.droppableId) {\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.items];\n    const destItems = [...destColumn.items];\n    const [removed] = sourceItems.splice(source.index, 1);\n    destItems.splice(destination.index, 0, removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]: {\n        ...sourceColumn,\n        items: sourceItems\n      },\n      [destination.droppableId]: {\n        ...destColumn,\n        items: destItems\n      }\n    });\n  } else {\n    const column = columns[source.droppableId];\n    const copiedItems = [...column.items];\n    const [removed] = copiedItems.splice(source.index, 1);\n    copiedItems.splice(destination.index, 0, removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]: {\n        ...column,\n        items: copiedItems\n      }\n    });\n  }\n};\n\nfunction App() {\n  const [columns, setColumns] = useState(columnsFromBackend);\n  return (\n    <div style={{ background:\"#0f1117\",display: \"flex\", justifyContent: \"center\", height: \"100%\" }}>\n      <DragDropContext onDragEnd={result => onDragEnd(result, columns, setColumns)} onDoubleClick={result=>onDoubleClick(result)}>\n        {Object.entries(columns).map(([columnId, column], index) => {\n          return (   \n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\"\n              }}\n              key={columnId}\n            >\n              <h5 style={{color:'#393e45'}}>{column.name}</h5>\n              <div style={{ margin: 20 }}>\n                <Droppable droppableId={columnId} key={columnId}>\n                  {(provided) => {\n                    return (\n                      <div\n                        {...provided.droppableProps}\n                        ref={provided.innerRef}\n                        style={{\n                          background: \"#0f1117\",\n                          padding: 4,\n                          width: 250,\n                          minHeight: 1000,\n                        }}\n                      >\n                        {column.items.map((item, index) => {\n                          return (\n                            <Draggable\n                              key={item.id}\n                              draggableId={item.id}\n                              index={index}\n                            >\n                              {(provided, snapshot) => {\n                                return (\n                                  <div\n                                    ref={provided.innerRef}\n                                    {...provided.draggableProps}\n                                    {...provided.dragHandleProps}\n                                    style={{\n                                      userSelect: \"none\",\n                                      padding: 16,\n                                      margin: \"0 0 8px 0\",\n                                      minHeight: \"50px\",\n                                      backgroundColor: snapshot.isDragging\n                                        ? \"#252930\"\n                                        : \"#0f1117\",\n                                      color: \"white\",\n                                      ...provided.draggableProps.style\n                                    }}\n                                  >\n                                    {item.name}\n                                  </div>\n                                );\n                              }}\n                            </Draggable>\n                          );\n                        })}\n                        {provided.placeholder}\n                      </div>\n                    );\n                  }}\n                </Droppable>\n              </div>\n            </div>\n          );\n        })}\n      </DragDropContext>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}