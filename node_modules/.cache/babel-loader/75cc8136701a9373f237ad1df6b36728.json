{"ast":null,"code":"var _jsxFileName = \"/Users/dingjunning/Documents/GitHub/drag-n-drop-column/src/App.js\";\nimport React, { useState } from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport uuid from \"uuid/v4\";\nconst available = [{\n  id: uuid(),\n  content: \"Start Time\"\n}, {\n  id: uuid(),\n  content: \"Stop Time\"\n}, {\n  id: uuid(),\n  content: \"Per Point\"\n}, {\n  id: uuid(),\n  content: \"Initial Margin\"\n}];\nconst visible = [{\n  id: uuid(),\n  content: \"Change %\"\n}, {\n  id: uuid(),\n  content: \"Change\"\n}, {\n  id: uuid(),\n  content: \"Last\"\n}, {\n  id: uuid(),\n  content: \"Last Volume\"\n}];\nconst columnsFromBackend = {\n  [uuid()]: {\n    name: \"Available\",\n    items: available\n  },\n  [uuid()]: {\n    name: \"Visible\",\n    items: visible\n  }\n};\n\nconst onDragEnd = (result, columns, setColumns) => {\n  if (!result.destination) return;\n  const {\n    source,\n    destination\n  } = result;\n\n  if (source.droppableId !== destination.droppableId) {\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.items];\n    const destItems = [...destColumn.items];\n    const [removed] = sourceItems.splice(source.index, 1);\n    destItems.splice(destination.index, 0, removed);\n    setColumns({ ...columns,\n      [source.droppableId]: { ...sourceColumn,\n        items: sourceItems\n      },\n      [destination.droppableId]: { ...destColumn,\n        items: destItems\n      }\n    });\n  } else {\n    const column = columns[source.droppableId];\n    const copiedItems = [...column.items];\n    const [removed] = copiedItems.splice(source.index, 1);\n    copiedItems.splice(destination.index, 0, removed);\n    setColumns({ ...columns,\n      [source.droppableId]: { ...column,\n        items: copiedItems\n      }\n    });\n  }\n};\n\nfunction App() {\n  const [columns, setColumns] = useState(columnsFromBackend);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      height: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      height: \"100%\",\n      marginTop: \"100px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, \"Configure Data Fields\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, \"Drag & drop between columns to configure visible data\")), /*#__PURE__*/React.createElement(DragDropContext, {\n    onDragEnd: result => onDragEnd(result, columns, setColumns),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, Object.entries(columns).map(([columnId, column], index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      key: columnId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, column.name), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Droppable, {\n      droppableId: columnId,\n      key: columnId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, (provided, snapshot) => {\n      return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, provided.droppableProps, {\n        ref: provided.innerRef,\n        style: {\n          background: snapshot.isDraggingOver ? \"lightblue\" : \"lightgrey\",\n          padding: 4,\n          width: 250,\n          minHeight: 500\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 23\n        }\n      }), column.items.map((item, index) => {\n        return /*#__PURE__*/React.createElement(Draggable, {\n          key: item.id,\n          draggableId: item.id,\n          index: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }\n        }, (provided, snapshot) => {\n          return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n            ref: provided.innerRef\n          }, provided.draggableProps, provided.dragHandleProps, {\n            style: {\n              userSelect: \"none\",\n              padding: 16,\n              margin: \"0 0 8px 0\",\n              minHeight: \"50px\",\n              backgroundColor: snapshot.isDragging ? \"#263B4A\" : \"#456C86\",\n              color: \"white\",\n              ...provided.draggableProps.style\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 35\n            }\n          }), item.content);\n        });\n      }), provided.placeholder);\n    })));\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dingjunning/Documents/GitHub/drag-n-drop-column/src/App.js"],"names":["React","useState","DragDropContext","Draggable","Droppable","uuid","available","id","content","visible","columnsFromBackend","name","items","onDragEnd","result","columns","setColumns","destination","source","droppableId","sourceColumn","destColumn","sourceItems","destItems","removed","splice","index","column","copiedItems","App","display","justifyContent","height","marginTop","Object","entries","map","columnId","flexDirection","alignItems","margin","provided","snapshot","droppableProps","innerRef","background","isDraggingOver","padding","width","minHeight","item","draggableProps","dragHandleProps","userSelect","backgroundColor","isDragging","color","style","placeholder"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,eAAT,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,qBAAtD;AACA,OAAOC,IAAP,MAAiB,SAAjB;AAEA,MAAMC,SAAS,GAAG,CAChB;AAAEC,EAAAA,EAAE,EAAEF,IAAI,EAAV;AAAcG,EAAAA,OAAO,EAAE;AAAvB,CADgB,EAEhB;AAAED,EAAAA,EAAE,EAAEF,IAAI,EAAV;AAAcG,EAAAA,OAAO,EAAE;AAAvB,CAFgB,EAGhB;AAAED,EAAAA,EAAE,EAAEF,IAAI,EAAV;AAAcG,EAAAA,OAAO,EAAE;AAAvB,CAHgB,EAIhB;AAAED,EAAAA,EAAE,EAAEF,IAAI,EAAV;AAAcG,EAAAA,OAAO,EAAE;AAAvB,CAJgB,CAAlB;AAOA,MAAMC,OAAO,GAAG,CACd;AAAEF,EAAAA,EAAE,EAAEF,IAAI,EAAV;AAAcG,EAAAA,OAAO,EAAE;AAAvB,CADc,EAEd;AAAED,EAAAA,EAAE,EAAEF,IAAI,EAAV;AAAcG,EAAAA,OAAO,EAAE;AAAvB,CAFc,EAGd;AAAED,EAAAA,EAAE,EAAEF,IAAI,EAAV;AAAcG,EAAAA,OAAO,EAAE;AAAvB,CAHc,EAId;AAAED,EAAAA,EAAE,EAAEF,IAAI,EAAV;AAAcG,EAAAA,OAAO,EAAE;AAAvB,CAJc,CAAhB;AAOA,MAAME,kBAAkB,GAAG;AACzB,GAACL,IAAI,EAAL,GAAU;AACRM,IAAAA,IAAI,EAAE,WADE;AAERC,IAAAA,KAAK,EAAEN;AAFC,GADe;AAKzB,GAACD,IAAI,EAAL,GAAU;AACRM,IAAAA,IAAI,EAAE,SADE;AAERC,IAAAA,KAAK,EAAEH;AAFC;AALe,CAA3B;;AAWA,MAAMI,SAAS,GAAG,CAACC,MAAD,EAASC,OAAT,EAAkBC,UAAlB,KAAiC;AACjD,MAAI,CAACF,MAAM,CAACG,WAAZ,EAAyB;AACzB,QAAM;AAAEC,IAAAA,MAAF;AAAUD,IAAAA;AAAV,MAA0BH,MAAhC;;AAEA,MAAII,MAAM,CAACC,WAAP,KAAuBF,WAAW,CAACE,WAAvC,EAAoD;AAClD,UAAMC,YAAY,GAAGL,OAAO,CAACG,MAAM,CAACC,WAAR,CAA5B;AACA,UAAME,UAAU,GAAGN,OAAO,CAACE,WAAW,CAACE,WAAb,CAA1B;AACA,UAAMG,WAAW,GAAG,CAAC,GAAGF,YAAY,CAACR,KAAjB,CAApB;AACA,UAAMW,SAAS,GAAG,CAAC,GAAGF,UAAU,CAACT,KAAf,CAAlB;AACA,UAAM,CAACY,OAAD,IAAYF,WAAW,CAACG,MAAZ,CAAmBP,MAAM,CAACQ,KAA1B,EAAiC,CAAjC,CAAlB;AACAH,IAAAA,SAAS,CAACE,MAAV,CAAiBR,WAAW,CAACS,KAA7B,EAAoC,CAApC,EAAuCF,OAAvC;AACAR,IAAAA,UAAU,CAAC,EACT,GAAGD,OADM;AAET,OAACG,MAAM,CAACC,WAAR,GAAsB,EACpB,GAAGC,YADiB;AAEpBR,QAAAA,KAAK,EAAEU;AAFa,OAFb;AAMT,OAACL,WAAW,CAACE,WAAb,GAA2B,EACzB,GAAGE,UADsB;AAEzBT,QAAAA,KAAK,EAAEW;AAFkB;AANlB,KAAD,CAAV;AAWD,GAlBD,MAkBO;AACL,UAAMI,MAAM,GAAGZ,OAAO,CAACG,MAAM,CAACC,WAAR,CAAtB;AACA,UAAMS,WAAW,GAAG,CAAC,GAAGD,MAAM,CAACf,KAAX,CAApB;AACA,UAAM,CAACY,OAAD,IAAYI,WAAW,CAACH,MAAZ,CAAmBP,MAAM,CAACQ,KAA1B,EAAiC,CAAjC,CAAlB;AACAE,IAAAA,WAAW,CAACH,MAAZ,CAAmBR,WAAW,CAACS,KAA/B,EAAsC,CAAtC,EAAyCF,OAAzC;AACAR,IAAAA,UAAU,CAAC,EACT,GAAGD,OADM;AAET,OAACG,MAAM,CAACC,WAAR,GAAsB,EACpB,GAAGQ,MADiB;AAEpBf,QAAAA,KAAK,EAAEgB;AAFa;AAFb,KAAD,CAAV;AAOD;AACF,CAnCD;;AAqCA,SAASC,GAAT,GAAe;AACb,QAAM,CAACd,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAACS,kBAAD,CAAtC;AACA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEoB,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,cAAc,EAAE,QAAnC;AAA6CC,MAAAA,MAAM,EAAE;AAArD,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,KAAK,EAAI;AAAEF,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,cAAc,EAAE,QAAnC;AAA6CC,MAAAA,MAAM,EAAE,MAArD;AAA6DC,MAAAA,SAAS,EAAC;AAAvE,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAFF,CADA,eAKE,oBAAC,eAAD;AACE,IAAA,SAAS,EAAEnB,MAAM,IAAID,SAAS,CAACC,MAAD,EAASC,OAAT,EAAkBC,UAAlB,CADhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGkB,MAAM,CAACC,OAAP,CAAepB,OAAf,EAAwBqB,GAAxB,CAA4B,CAAC,CAACC,QAAD,EAAWV,MAAX,CAAD,EAAqBD,KAArB,KAA+B;AAC1D,wBACE;AACE,MAAA,KAAK,EAAE;AACLI,QAAAA,OAAO,EAAE,MADJ;AAELQ,QAAAA,aAAa,EAAE,QAFV;AAGLC,QAAAA,UAAU,EAAE;AAHP,OADT;AAME,MAAA,GAAG,EAAEF,QANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKV,MAAM,CAAChB,IAAZ,CARF,eASE;AAAK,MAAA,KAAK,EAAE;AAAE6B,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,WAAW,EAAEH,QAAxB;AAAkC,MAAA,GAAG,EAAEA,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAACI,QAAD,EAAWC,QAAX,KAAwB;AACvB,0BACE,6CACMD,QAAQ,CAACE,cADf;AAEE,QAAA,GAAG,EAAEF,QAAQ,CAACG,QAFhB;AAGE,QAAA,KAAK,EAAE;AACLC,UAAAA,UAAU,EAAEH,QAAQ,CAACI,cAAT,GACR,WADQ,GAER,WAHC;AAILC,UAAAA,OAAO,EAAE,CAJJ;AAKLC,UAAAA,KAAK,EAAE,GALF;AAMLC,UAAAA,SAAS,EAAE;AANN,SAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAYGtB,MAAM,CAACf,KAAP,CAAawB,GAAb,CAAiB,CAACc,IAAD,EAAOxB,KAAP,KAAiB;AACjC,4BACE,oBAAC,SAAD;AACE,UAAA,GAAG,EAAEwB,IAAI,CAAC3C,EADZ;AAEE,UAAA,WAAW,EAAE2C,IAAI,CAAC3C,EAFpB;AAGE,UAAA,KAAK,EAAEmB,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKG,CAACe,QAAD,EAAWC,QAAX,KAAwB;AACvB,8BACE;AACE,YAAA,GAAG,EAAED,QAAQ,CAACG;AADhB,aAEMH,QAAQ,CAACU,cAFf,EAGMV,QAAQ,CAACW,eAHf;AAIE,YAAA,KAAK,EAAE;AACLC,cAAAA,UAAU,EAAE,MADP;AAELN,cAAAA,OAAO,EAAE,EAFJ;AAGLP,cAAAA,MAAM,EAAE,WAHH;AAILS,cAAAA,SAAS,EAAE,MAJN;AAKLK,cAAAA,eAAe,EAAEZ,QAAQ,CAACa,UAAT,GACb,SADa,GAEb,SAPC;AAQLC,cAAAA,KAAK,EAAE,OARF;AASL,iBAAGf,QAAQ,CAACU,cAAT,CAAwBM;AATtB,aAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAgBGP,IAAI,CAAC1C,OAhBR,CADF;AAoBD,SA1BH,CADF;AA8BD,OA/BA,CAZH,EA4CGiC,QAAQ,CAACiB,WA5CZ,CADF;AAgDD,KAlDH,CADF,CATF,CADF;AAkED,GAnEA,CAHH,CALF,CADF;AAgFD;;AAED,eAAe7B,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport uuid from \"uuid/v4\";\n\nconst available = [\n  { id: uuid(), content: \"Start Time\" },\n  { id: uuid(), content: \"Stop Time\" },\n  { id: uuid(), content: \"Per Point\" },\n  { id: uuid(), content: \"Initial Margin\" },\n];\n\nconst visible = [\n  { id: uuid(), content: \"Change %\" },\n  { id: uuid(), content: \"Change\" },\n  { id: uuid(), content: \"Last\" },\n  { id: uuid(), content: \"Last Volume\" },\n];\n\nconst columnsFromBackend = {\n  [uuid()]: {\n    name: \"Available\",\n    items: available\n  },\n  [uuid()]: {\n    name: \"Visible\",\n    items: visible\n  },\n};\n\nconst onDragEnd = (result, columns, setColumns) => {\n  if (!result.destination) return;\n  const { source, destination } = result;\n\n  if (source.droppableId !== destination.droppableId) {\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.items];\n    const destItems = [...destColumn.items];\n    const [removed] = sourceItems.splice(source.index, 1);\n    destItems.splice(destination.index, 0, removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]: {\n        ...sourceColumn,\n        items: sourceItems\n      },\n      [destination.droppableId]: {\n        ...destColumn,\n        items: destItems\n      }\n    });\n  } else {\n    const column = columns[source.droppableId];\n    const copiedItems = [...column.items];\n    const [removed] = copiedItems.splice(source.index, 1);\n    copiedItems.splice(destination.index, 0, removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]: {\n        ...column,\n        items: copiedItems\n      }\n    });\n  }\n};\n\nfunction App() {\n  const [columns, setColumns] = useState(columnsFromBackend);\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"center\", height: \"100%\" }}>\n    <div style = {{ display: \"flex\", justifyContent: \"center\", height: \"100%\", marginTop:\"100px\"}}>\n      <h1>Configure Data Fields</h1>\n      <span>Drag & drop between columns to configure visible data</span>\n    </div>\n      <DragDropContext\n        onDragEnd={result => onDragEnd(result, columns, setColumns)}\n      >\n        {Object.entries(columns).map(([columnId, column], index) => {\n          return (\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\"\n              }}\n              key={columnId}\n            >\n              <h2>{column.name}</h2>\n              <div style={{ margin: 8 }}>\n                <Droppable droppableId={columnId} key={columnId}>\n                  {(provided, snapshot) => {\n                    return (\n                      <div\n                        {...provided.droppableProps}\n                        ref={provided.innerRef}\n                        style={{\n                          background: snapshot.isDraggingOver\n                            ? \"lightblue\"\n                            : \"lightgrey\",\n                          padding: 4,\n                          width: 250,\n                          minHeight: 500\n                        }}\n                      >\n                        {column.items.map((item, index) => {\n                          return (\n                            <Draggable\n                              key={item.id}\n                              draggableId={item.id}\n                              index={index}\n                            >\n                              {(provided, snapshot) => {\n                                return (\n                                  <div\n                                    ref={provided.innerRef}\n                                    {...provided.draggableProps}\n                                    {...provided.dragHandleProps}\n                                    style={{\n                                      userSelect: \"none\",\n                                      padding: 16,\n                                      margin: \"0 0 8px 0\",\n                                      minHeight: \"50px\",\n                                      backgroundColor: snapshot.isDragging\n                                        ? \"#263B4A\"\n                                        : \"#456C86\",\n                                      color: \"white\",\n                                      ...provided.draggableProps.style\n                                    }}\n                                  >\n                                    {item.content}\n                                  </div>\n                                );\n                              }}\n                            </Draggable>\n                          );\n                        })}\n                        {provided.placeholder}\n                      </div>\n                    );\n                  }}\n                </Droppable>\n              </div>\n            </div>\n          );\n        })}\n      </DragDropContext>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}