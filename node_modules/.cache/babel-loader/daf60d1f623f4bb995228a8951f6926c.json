{"ast":null,"code":"var _jsxFileName = \"/Users/dingjunning/Documents/GitHub/drag-n-drop-column/src/App.js\";\nimport React from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { Button } from 'react-bootstrap';\nimport { BsList, BsLockFill } from 'react-icons/bs';\nconst available = [{\n  id: \"startTime\",\n  name: \"Start Time\"\n}, {\n  id: \"stopTime\",\n  name: \"Stop Time\"\n}, {\n  id: \"perPoint\",\n  name: \"Per Point\"\n}, {\n  id: \"initialMargin\",\n  name: \"Initial Margin\"\n}];\nconst visible = [{\n  id: \"change %\",\n  name: \"Change %\"\n}, {\n  id: \"change\",\n  name: \"Change\"\n}, {\n  id: \"last\",\n  name: \"Last\"\n}, {\n  id: \"last volume\",\n  name: \"Last Volume\"\n}];\nconst fixed = [{\n  id: \"symbol&Description\",\n  name: \"Symbol & Description\"\n}];\nconst columnsFromBackend = {\n  \"available\": {\n    name: \"Available\",\n    items: available\n  },\n  \"visible\": {\n    name: \"Visible\",\n    items: fixed.concat(visible)\n  }\n};\n\nconst checkDisable = item => {\n  for (let i = 0; i < fixed.length; i++) {\n    if (fixed[i].id === item.id) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.saveData = event => {\n      this.baseState = this.state;\n    };\n\n    this.resetData = () => {\n      this.setState(this.baseState);\n    };\n\n    this.onDoubleClick = event => {\n      const name = event.target.innerHTML;\n      const id = name.toLowerCase();\n      const newFixed = {\n        id: id,\n        name: name\n      };\n      let index = -1;\n\n      for (let i = 0; i < this.state.fixed.length; i++) {\n        if (this.state.fixed[i].id === newFixed.id) {\n          index = i;\n          this.setState(prev => {\n            const list = prev.fixed.splice(index, 1);\n            return {\n              list\n            };\n          });\n          break;\n        }\n      }\n\n      if (index === -1) {\n        this.setState(prev => {\n          const list = prev.fixed.push(newFixed);\n          return {\n            list\n          };\n        });\n      }\n    };\n\n    this.onDragEnd = result => {\n      if (!result.destination) return;\n      const {\n        source,\n        destination\n      } = result;\n\n      if (source.droppableId !== destination.droppableId) {\n        this.setState(prev => {\n          let sourceColumn = prev.columns[source.droppableId];\n          let destColumn = prev.columns[destination.droppableId];\n          let sourceItems = [...sourceColumn.items];\n          let destItems = [...destColumn.items];\n          let [removed] = sourceItems.splice(source.index, 1);\n          destItems.splice(destination.index, 0, removed);\n          return {\n            columns: { ...prev.columns,\n              [source.droppableId]: { ...sourceColumn,\n                items: sourceItems\n              },\n              [destination.droppableId]: { ...destColumn,\n                items: destItems\n              }\n            }\n          };\n        });\n      } else {\n        this.setState(prev => {\n          let column = prev.columns[source.droppableId];\n          let copiedItems = [...column.items];\n          let [removed] = copiedItems.splice(source.index, 1);\n          copiedItems.splice(destination.index, 0, removed);\n          console.log(prev.columns);\n          console.log(copiedItems);\n          console.log(column);\n          return {\n            columns: { ...prev.columns,\n              [source.droppableId]: { ...column,\n                items: copiedItems\n              }\n            }\n          };\n        }, () => {});\n      }\n    };\n\n    this.state = {\n      columns: columnsFromBackend,\n      fixed: fixed\n    };\n    this.baseState = this.state;\n  } //save data when click on save\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        background: \"#000000\",\n        display: \"flex\",\n        height: \"100%\",\n        color: \"#ffffff\",\n        paddingTop: \"20px\",\n        paddingLeft: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }, \"Configure Data Fields\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        background: \"#000000\",\n        display: \"flex\",\n        height: \"100%\",\n        color: \"#9da4ab\",\n        paddingLeft: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }\n    }, \"Drag & Drop between columns to configure visible data.\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        background: \"#000000\",\n        display: \"flex\",\n        height: \"100%\",\n        padding: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(DragDropContext, {\n      style: {\n        color: \"white\"\n      },\n      onDragEnd: result => this.onDragEnd(result),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }\n    }, Object.entries(this.state.columns).map(([columnId, column]) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        key: columnId,\n        onDoubleClick: event => this.onDoubleClick(event),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          color: '#9da4ab',\n          paddingLeft: \"15px\",\n          marginTop: \"20px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 19\n        }\n      }, column.name), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Droppable, {\n        droppableId: columnId,\n        key: columnId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }\n      }, provided => {\n        return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, provided.droppableProps, {\n          ref: provided.innerRef,\n          style: {\n            background: \"#000000\",\n            padding: 3,\n            width: 300,\n            borderStyle: column.name === \"Available\" ? \"none none none none\" : \"none none none dashed\",\n            borderWidth: \"3px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 27\n          }\n        }), column.items.map((item, index) => {\n          return /*#__PURE__*/React.createElement(Draggable, {\n            key: item.id,\n            draggableId: item.id,\n            index: index,\n            isDragDisabled: checkDisable(item),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 33\n            }\n          }, (provided, snapshot) => {\n            return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n              ref: provided.innerRef\n            }, provided.draggableProps, provided.dragHandleProps, {\n              style: {\n                ':hover': {\n                  backgroundColor: snapshot.isDragging ? \"#252930\" : \"#000000\"\n                },\n                userSelect: \"none\",\n                padding: 5,\n                margin: \"0 0 5px 5px\",\n                minHeight: \"20px\",\n                backgroundColor: snapshot.isDragging ? \"#252930\" : \"#000000\",\n                color: checkDisable(item) ? \"#9da4ab\" : \"#ffffff\",\n                ...provided.draggableProps.style\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 39\n              }\n            }), /*#__PURE__*/React.createElement(\"div\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 41\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              style: {\n                padding: \"10px\",\n                float: \"left\"\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 43\n              }\n            }, /*#__PURE__*/React.createElement(BsLockFill, {\n              style: {\n                display: checkDisable(item) ? \"block\" : \"none\"\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 45\n              }\n            }), /*#__PURE__*/React.createElement(BsList, {\n              style: {\n                display: checkDisable(item) ? \"none\" : \"block\"\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 45\n              }\n            })), /*#__PURE__*/React.createElement(\"div\", {\n              style: {\n                padding: \"7px\"\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 43\n              }\n            }, item.name)));\n          });\n        }), provided.placeholder);\n      })));\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        background: \"#000000\",\n        height: \"1000px\",\n        padding: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      style: {\n        margin: \"10px\",\n        width: \"90px\"\n      },\n      variant: \"info\",\n      onClick: event => this.saveData(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }\n    }, \"Save\"), /*#__PURE__*/React.createElement(Button, {\n      style: {\n        margin: \"10px\",\n        width: \"90px\"\n      },\n      variant: \"secondary\",\n      onClick: event => this.resetData(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }\n    }, \"Cancel\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dingjunning/Documents/GitHub/drag-n-drop-column/src/App.js"],"names":["React","DragDropContext","Draggable","Droppable","Button","BsList","BsLockFill","available","id","name","visible","fixed","columnsFromBackend","items","concat","checkDisable","item","i","length","App","Component","constructor","props","saveData","event","baseState","state","resetData","setState","onDoubleClick","target","innerHTML","toLowerCase","newFixed","index","prev","list","splice","push","onDragEnd","result","destination","source","droppableId","sourceColumn","columns","destColumn","sourceItems","destItems","removed","column","copiedItems","console","log","render","background","display","height","color","paddingTop","paddingLeft","padding","Object","entries","map","columnId","flexDirection","marginTop","provided","droppableProps","innerRef","width","borderStyle","borderWidth","snapshot","draggableProps","dragHandleProps","backgroundColor","isDragging","userSelect","margin","minHeight","style","float","placeholder"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { Button } from 'react-bootstrap';\nimport { BsList,BsLockFill } from 'react-icons/bs';\n\nconst available = [\n  { id: \"startTime\", name: \"Start Time\" },\n  { id: \"stopTime\", name: \"Stop Time\" },\n  { id: \"perPoint\", name: \"Per Point\" },\n  { id: \"initialMargin\" , name: \"Initial Margin\" },\n];\n\nconst visible = [\n  { id: \"change %\", name: \"Change %\"},\n  { id: \"change\", name: \"Change\"},\n  { id: \"last\", name: \"Last\" },\n  { id: \"last volume\", name: \"Last Volume\" },\n];\n\nconst fixed = [\n  { id: \"symbol&Description\", name: \"Symbol & Description\"},\n];\n\nconst columnsFromBackend = {\n  \"available\": {\n    name: \"Available\",\n    items: available\n  },\n  \"visible\": {\n    name: \"Visible\",\n    items: fixed.concat(visible)\n  },\n};\n\nconst checkDisable=(item)=>{\n  for(let i=0;i<fixed.length;i++){\n    if(fixed[i].id===item.id){\n      return true;\n    }\n  }\n  return false;\n}\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={\n      columns: columnsFromBackend,\n      fixed: fixed,\n    }\n    this.baseState = this.state;\n  }\n\n  //save data when click on save\n  saveData=(event)=>{\n    this.baseState = this.state;\n  }\n\n  //reset all moved when click on cancel\n  resetData=()=>{\n    this.setState(this.baseState);\n  }\n\n  //Double click event\n  onDoubleClick=(event)=>{\n    const name = event.target.innerHTML;\n    const id = name.toLowerCase();\n    const newFixed = {id:id,name:name};\n    let index = -1;\n    for(let i=0;i<this.state.fixed.length;i++){\n      if(this.state.fixed[i].id===newFixed.id){\n        index = i;\n        this.setState(prev=>{\n          const list = prev.fixed.splice(index,1);\n          return{\n            list\n          }\n        });\n        break;\n      }\n    }\n    if(index===-1){\n      this.setState(prev=>{\n        const list = prev.fixed.push(newFixed);\n        return{\n          list\n        }\n      });\n    }   \n  }\n\n  //Drag event\n  onDragEnd = (result) => {\n    if (!result.destination) return;\n    const { source, destination } = result;\n    if (source.droppableId !== destination.droppableId) {\n      this.setState(prev=>{\n        let sourceColumn = prev.columns[source.droppableId];\n        let destColumn = prev.columns[destination.droppableId];\n        let sourceItems = [...sourceColumn.items];\n        let destItems = [...destColumn.items];\n        let [removed] = sourceItems.splice(source.index, 1);\n        destItems.splice(destination.index, 0, removed);\n        return{\n          columns:{\n            ...prev.columns,\n            [source.droppableId]: {\n              ...sourceColumn,\n              items: sourceItems\n            },\n            [destination.droppableId]: {\n              ...destColumn,\n              items: destItems\n            }\n          }\n        }\n      });\n    } else {\n      this.setState(prev=>{   \n        let column = prev.columns[source.droppableId];\n        let copiedItems = [...column.items];\n        let [removed] = copiedItems.splice(source.index, 1);\n        copiedItems.splice(destination.index, 0, removed);\n        console.log(prev.columns)\n        console.log(copiedItems);\n        console.log(column);\n        return{\n          columns:{\n            ...prev.columns,\n            [source.droppableId]: {\n              ...column,\n              items: copiedItems\n            }\n          }\n        }\n      },()=>{\n        \n      });\n    }\n  };\n\n  render(){\n    return (\n      <div>\n        <div style={{ background:\"#000000\", display:\"flex\", height: \"100%\", color:\"#ffffff\", paddingTop:\"20px\", paddingLeft:\"20px\"}}>\n          <h5>Configure Data Fields</h5>\n        </div>\n        <div style={{ background:\"#000000\", display:\"flex\", height: \"100%\", color:\"#9da4ab\",paddingLeft:\"20px\"}}>\n          <span>Drag & Drop between columns to configure visible data.</span>\n        </div>\n        <div style={{ background:\"#000000\",display: \"flex\", height: \"100%\", padding:\"20px\" }}>\n          <DragDropContext style={{color:\"white\"}} onDragEnd={result => this.onDragEnd(result)}>\n            {Object.entries(this.state.columns).map(([columnId, column]) => {\n              return (   \n                <div\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    \n                  }}\n                  key={columnId}\n                  onDoubleClick={event=>this.onDoubleClick(event)}\n                >\n                  <p style={{color:'#9da4ab',paddingLeft:\"15px\",marginTop:\"20px\"}}>{column.name}</p>\n                  <div>\n                    <Droppable droppableId={columnId} key={columnId} >\n                      {(provided) => {\n                        return (\n                          <div\n                            {...provided.droppableProps}\n                            ref={provided.innerRef}\n                            style={{\n                              background: \"#000000\",\n                              padding: 3,\n                              width: 300,\n                              borderStyle: column.name===\"Available\"\n                                ? \"none none none none\"\n                                : \"none none none dashed\",\n                              borderWidth:\"3px\",\n                            }}\n                          >\n                            {column.items.map((item, index) => {\n                              return (\n                                <Draggable\n                                  key={item.id}\n                                  draggableId={item.id}\n                                  index={index}\n                                  isDragDisabled={checkDisable(item)}\n                                >\n                                  {(provided, snapshot) => {\n                                    return (\n                                      <div\n                                        ref={provided.innerRef}\n                                        {...provided.draggableProps}\n                                        {...provided.dragHandleProps}\n                                        style={{\n                                          ':hover':{\n                                            backgroundColor: snapshot.isDragging\n                                            ? \"#252930\"\n                                            : \"#000000\",\n                                          },\n                                          userSelect: \"none\",\n                                          padding: 5,\n                                          margin: \"0 0 5px 5px\",\n                                          minHeight: \"20px\",\n                                          backgroundColor: snapshot.isDragging\n                                            ? \"#252930\"\n                                            : \"#000000\",\n                                          color: checkDisable(item)\n                                            ? \"#9da4ab\"\n                                            : \"#ffffff\",\n                                          ...provided.draggableProps.style\n                                        }}\n                                      >\n                                        <div>\n                                          <div style={{padding:\"10px\",float:\"left\"}}>\n                                            <BsLockFill style={{\n                                              display: checkDisable(item)\n                                              ? \"block\"\n                                              : \"none\",\n                                              }}\n                                            />\n                                            <BsList style={{\n                                              display: checkDisable(item)\n                                              ? \"none\"\n                                              : \"block\",\n                                              }}\n                                            />\n                                          </div>\n                                          <div style={{padding:\"7px\"}}>\n                                            {item.name}\n                                          </div>\n                                        </div>\n                                      </div>\n                                    );\n                                  }}\n                                </Draggable>\n                              );\n                            })}\n                            {provided.placeholder}\n                          </div>\n                        );\n                      }}\n                    </Droppable>\n                  </div>\n                </div>\n              );\n            })}\n          </DragDropContext>\n        </div>\n        <div style={{background:\"#000000\" , height:\"1000px\", padding:\"20px\"}}>\n          <Button style={{margin:\"10px\", width:\"90px\"}} variant=\"info\" onClick={event=>this.saveData(event)}>Save</Button>\n          <Button style={{margin:\"10px\", width:\"90px\"}} variant=\"secondary\" onClick={event=>this.resetData(event)}>Cancel</Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}